name: Django CI with React Frontend

on:
  push:
    branches: ["master"]
    paths-ignore: ["node_modules/**/*"]
  pull_request:
    branches: ["master"]
    paths-ignore: ["node_modules/**/*"]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 20  # Increase timeout
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -h localhost --silent"
          --health-interval 15s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Debug Environment Variables
        run: |
          echo "DB_HOST: $DB_HOST"
          echo "DB_USER: $DB_USER"
          echo "DB_NAME: $DB_NAME"
        env:
          DB_HOST: mysql
          DB_USER: admin
          DB_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          DB_NAME: ${{ secrets.MYSQL_DATABASE }}
      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Backend Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Backend/requirements.txt

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..5}; do
            if mysqladmin ping -h mysql -P 3306 --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL... ($i)"
            sleep 5
          done

      - name: Check MySQL logs
        run: |
          docker logs $(docker ps -q --filter "ancestor=mysql:5.7")

      - name: Set up Database
        run: |
          python manage.py migrate
        working-directory: Backend  # Adjust this if necessary
        env:
          DATABASE_URL: mysql://root:${{ secrets.MYSQL_ROOT_PASSWORD }}@mysql:3306/${{ secrets.MYSQL_DATABASE }}

      - name: Run Tests
        run: |
          python manage.py test
        working-directory: Backend  # Adjust this if necessary
        env:
          DATABASE_URL: mysql://root:${{ secrets.MYSQL_ROOT_PASSWORD }}@mysql:3306/${{ secrets.MYSQL_DATABASE }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Frontend Dependencies
        working-directory: frontend
        run: npm install

      - name: Build Frontend
        working-directory: frontend
        run: |
          CI=false npm run build
